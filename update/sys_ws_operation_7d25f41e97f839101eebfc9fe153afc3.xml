<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>inc_getInfo (v2)</name>
        <operation_script><![CDATA[(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    // implement resource here

    // Get value from the user_name path parameter passed in the URL
    var requestUser = request.pathParams.user_name;
    // Get value of the ni_query query parameter passed in the URL
    var requestNIQuery = request.queryParams.ni_query;

    // Query the sys_user table to get the user record for the user passed in
    // the user_id path parameter.  
    var requestUserName = new GlideRecord('sys_user');
    requestUserName.get('user_name', requestUser);



    // Get the count of active NeedIt table records where the user from the
    // user_name path parameter is the Requested for.  The encoded query is from the
    // Query Parameter Associations.  Group by category.
    var userINCCount = new GlideAggregate('incident');
    userINCCount.addAggregate('COUNT');
    userINCCount.addQuery('caller_id', requestUserName.sys_id);
    userINCCount.addEncodedQuery(requestNIQuery);
    userINCCount.groupBy('category');
    userINCCount.query();


    var incRec = 0;
    var incUserRecs = [];
    var incRecsCount = 0;

    while (userINCCount.next()) {
        incRec = userINCCount.getAggregate('COUNT');
        var reqType = userINCCount.category.getDisplayValue();
        incUserRecs.push({
            "requestType": reqType,
            "count": incRec
        });
        incRecsCount = parseInt(incRecsCount) + parseInt(incRec);
    }

    //Create a body object.  Add property value pairs to the body.
    var body = {};
    body.totalUserNIRecs = incRecsCount;
    body.catCounts = incUserRecs;
    body.user = {
        "user_name": requestUserName.user_name,
        "full_name": requestUserName.name,
        "User_ID": requestUserName.sys_id,
    };

    // Send the response object, which is returned to the requestor, to the body object.
    response.setBody(body);
})(request, response);]]></operation_script>
        <operation_uri>/api/x_58872_needit/v2/needit_api/incGetInfo/{user_name}</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/incGetInfo/{user_name}</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description>Get the incidents detailed info by user</short_description>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-08-23 18:42:10</sys_created_on>
        <sys_id>7d25f41e97f839101eebfc9fe153afc3</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>inc_getInfo (v2)</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_ws_operation_7d25f41e97f839101eebfc9fe153afc3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-08-23 18:42:10</sys_updated_on>
        <web_service_definition display_value="NeedIt API">0d85ac7197f4b5101eebfc9fe153af2e</web_service_definition>
        <web_service_version display_value="v2">b525f81a977839101eebfc9fe153af18</web_service_version>
    </sys_ws_operation>
</record_update>
